#!/sbin/sh
##########################################################################################
#
# Magisk 模块安装脚本模板
# by topjohnwu
# 翻译: cjybyjk
#
##########################################################################################

TMPDIR=/dev/tmp
INSTALLER=$TMPDIR/install
# 总在 tmp 下挂载
MOUNTPATH=$TMPDIR/magisk_img

# 默认权限
umask 022

# 清除工作
rm -rf $TMPDIR 2>/dev/null
mkdir -p $INSTALLER

# 在加载 util_functions 前 echo
ui_print() { echo "$1"; }

require_new_magisk() {
  ui_print "*******************************"
  ui_print " 请安装 Magisk v17.0+! "
  ui_print "*******************************"
  exit 1
}

##########################################################################################
# 环境设置
##########################################################################################

OUTFD=$2
ZIP=$3

mount /data 2>/dev/null

# 加载公用函数
if [ -f /data/adb/magisk/util_functions.sh ]; then
  . /data/adb/magisk/util_functions.sh
elif [ -f /data/magisk/util_functions.sh ]; then
  NVBASE=/data
  . /data/magisk/util_functions.sh
else
  require_new_magisk
fi

# 如果处于 BOOTMODE(系统模式)，则使用替代镜像
$BOOTMODE && IMG=$NVBASE/magisk_merge.img

# 准备卡刷 zip 包
setup_flashable

# 挂载分区
mount_partitions

# 检测版本和架构
api_level_arch_detect

# 你可以从 $API 取得 Android API 版本, 从 $ARCH 取得 CPU 架构
# 如果您正在创建依赖特定 Android版本/平台 的模块，这是非常有用的

# 安装 busybox 和二进制文件
$BOOTMODE && boot_actions || recovery_actions

##########################################################################################
# 准备
##########################################################################################

# 提取公共文件
unzip -o "$ZIP" module.prop config.sh 'common/*' -d $INSTALLER >&2

[ ! -f $INSTALLER/config.sh ] && abort "! 从 zip 中提取文件失败!"
# 加载设置
. $INSTALLER/config.sh

# 检查已安装的 Magisk 版本
MIN_VER=`grep_prop minMagisk $INSTALLER/module.prop`
[ ! -z $MAGISK_VER_CODE -a $MAGISK_VER_CODE -ge $MIN_VER ] || require_new_magisk
MODID=`grep_prop id $INSTALLER/module.prop`
MODPATH=$MOUNTPATH/$MODID

# 打印模块名称
print_modname

# 请将这个信息保留在您的 zip 卡刷包中 :)
ui_print "******************************"
ui_print "Powered by Magisk (@topjohnwu)"
ui_print "******************************"

##########################################################################################
# 安装
##########################################################################################

# 获取变量 reqSizeM。如果需要，可以使用自己的方法来确定 reqSizeM
# reqSizeM 为安装这个模块需要的空间大小, 单位MB
request_zip_size_check "$ZIP"

# 这个函数将挂载 $IMG 到 $MOUNTPATH，并根据 $reqSizeM 调整镜像大小
mount_magisk_img

# 创建模块路径
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

# 将文件解压缩到 system 。如果需要，可以使用自己的方法
ui_print "- 正在解压模块文件"
unzip -o "$ZIP" 'system/*' -d $MODPATH >&2

# 删除 placeholder
rm -f $MODPATH/system/placeholder 2>/dev/null

# 处理 replace 文件夹
for TARGET in $REPLACE; do
  mktouch $MODPATH$TARGET/.replace
done

# 自动挂载
$AUTOMOUNT && touch $MODPATH/auto_mount

# prop 文件
$PROPFILE && cp -af $INSTALLER/common/system.prop $MODPATH/system.prop

# 模块信息
cp -af $INSTALLER/module.prop $MODPATH/module.prop
if $BOOTMODE; then
  # 为 Magisk Manager 更新信息
  mktouch /sbin/.core/img/$MODID/update
  cp -af $INSTALLER/module.prop /sbin/.core/img/$MODID/module.prop
fi

# post-fs-data 模式脚本
$POSTFSDATA && cp -af $INSTALLER/common/post-fs-data.sh $MODPATH/post-fs-data.sh

# service 模式脚本
$LATESTARTSERVICE && cp -af $INSTALLER/common/service.sh $MODPATH/service.sh

ui_print "- 正在设置权限"
set_permissions

##########################################################################################
# 结束
##########################################################################################

# 卸载 magisk 镜像, 并尽可能地缩小它
unmount_magisk_img

$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR

ui_print "- 完成"
exit 0
